Activity 1:

1. How many bits does it take to represent the values from 0 to 255?

8 bits.

2. How many bytes does it take to represent a color in the RGB color model?

3 bytes.

3. How many pixels are in a picture that is 640 pixels wide and 480 pixels high?

307,200 pixels

-----------------------------------------------------------------

Activity 2:

1. How can you make pink?

255 for R, 192 for G, 203 for B. The key is to make the blue higher than the green, but have red as the highest value.

2. How can you make yellow?

255 for R, 255 for G, 85 for B. The blue should be lowered to around 100, but red and green can be left alone.

3. How can you make purple?

255 for R, 100 for G, 255 for B. The green should be lowered to around 100, while the red and blue values can be left alone.

4. How can you make white?

Set all 3 values to 255. White is the presence of all colors.

5. How can you make dark gray?

Set all 3 values to around 150. 

-----------------------------------------------------------------

Activity 3:

1. What is the row index for the top left corner of the picture?

0

2. What is the column index for the top left corner of the picture?

0

3. The width of this picture is 640. What is the rightmost column index?

639

4. The height of this picture is 480. What is the bottom-most row index?

479

5. Does the row index increase from left to right or top to bottom?

Top to bottom

6. Does the column index increase from left to right or top to bottom?

Left to right

7. Set the zoom to 500%. Can you see squares of color? This is called pixelation. What is the definition of Pixelation?	

Pixelation means displaying a picture so magnified that the individual pixels look like small squares.

-----------------------------------------------------------------

Activity 4:

Answers can be found in the "classes" folder.

-----------------------------------------------------------------

Activity 5:

1. Open Picture.java and look for the method getPixels2D. Is it there?

No

2. Open SimplePicture.java and look for the method getPixels2D. Is it there?

Yes

3. Does the following code compile? DigitalPicture p = new DigitalPicture();

No

4. Assuming that a no-argument constructor exists for SimplePicture, would the following code compile?DigitalPicture p = new SimplePicture();

Yes

5. Assuming that a no-argument constructor exists for Picture, does the following code compile? DigitalPicture p = new Picture();

Yes

6. Assuming that a no-argument constructor exists for Picture, does the following code compile? SimplePicture p = new Picture();

Yes

7. Assuming that a no-argument constructor exists for SimplePicture, does the following code compile? Picture p = new SimplePicture();

No

The rest of activity 5 can be located in the "classes" folder.

-----------------------------------------------------------------

Activity 6:

The answers can be located in the "classes" folder.

-----------------------------------------------------------------

Activity 7:

1. How many times would the body of this nested for loop execute? 

for (int row = 7; row < 17; row++)
     for (int col = 6; col < 15; col++)
      
90

2. How many times would the body of this nested for loop execute?

for (int row = 5; row <= 11; row++)
        for (int col = 3; col <= 18; col++)

112

The rest of activity 7 can be located in the "classes" folder.

-----------------------------------------------------------------

Activity 8:

The answers can be located in the "classes" folder.

-----------------------------------------------------------------

Activity 9:

The answers can be located in the "classes" folder.
